name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  # Automated PR validation
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check commit messages
      run: |
        git log --oneline ${{ github.event.pull_request.base.sha }}..${{ github.sha }} | \
        grep -E "^[a-f0-9]+ (feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .{1,72}$" || \
        (echo "❌ Commit messages must follow conventional commits format" && exit 1)
        
    - name: Check for TODO/FIXME comments
      run: |
        if grep -r "TODO\|FIXME" src/ --exclude-dir=node_modules; then
          echo "⚠️ Found TODO/FIXME comments - consider addressing before merge"
        fi
        
    - name: Validate package.json
      run: npm run validate-package
      continue-on-error: true
      
    - name: Run dependency check
      run: |
        if npm ls --depth=0 2>&1 | grep -i "missing\|invalid"; then
          echo "❌ Dependency issues found!"
          exit 1
        fi
        
    - name: Build size check
      run: |
        npm run build
        BUNDLE_SIZE=$(du -sh dist/ | cut -f1)
        echo "📦 Bundle size: $BUNDLE_SIZE"
        
        # Check if bundle is larger than 5MB
        BUNDLE_BYTES=$(du -sb dist/ | cut -f1)
        if [ $BUNDLE_BYTES -gt 5242880 ]; then
          echo "⚠️ Bundle size is large (>5MB). Consider optimization."
        fi

  # Code coverage check
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests with coverage
      run: npm run test:coverage
      continue-on-error: true
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  # Browser compatibility check
  browser-test:
    name: Browser Compatibility
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Setup Playwright
      run: npx playwright install ${{ matrix.browser }}
      
    - name: Run browser tests
      run: |
        npm run preview &
        sleep 5
        npx playwright test --project=${{ matrix.browser }}
      continue-on-error: true